[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
name = "nxontology_ml"
version = "0.0.0"
description = "Machine learning to classify ontology nodes."
authors = ["Related Sciences Data Team"]
readme = "README.md"
repository = "https://github.com/related-sciences/nxontology-ml"
license = "Apache-2.0"
include = ["data/efo_otar_slim_v3.43.0_rs_classification.tsv"]

[tool.poetry.scripts]
nxontology_ml = "nxontology_ml.commands:cli"

# https://python-poetry.org/docs/versions/
[tool.poetry.dependencies]
bioregistry = "^0.10"
fire = "^0.5"
ipykernel = "^6.24"
jupyter = "^1.0"
nbconvert = "^6.2"
notebook = "^6.4"
numpy = "^1.25.1"
# nxontology = "^0.5.0"
nxontology = { git = "https://github.com/related-sciences/nxontology.git", rev = "b68411dd7427e303c5f5e389a90185976127c78b" }
oaklib = "^0.5"
pandas = "^2.0"
python = "^3.10"
pytest-cov = "^4.1.0"
openai = "^0.27.8"
python-dotenv = "^1.0.0"
tiktoken = "^0.4.0"
lsm-db = "^0.7.0"
# Bug in catboost==1.2.1: https://github.com/catboost/catboost/issues/2486
catboost = "1.2.0"
scikit-learn = "^1.3.0"
transformers = "^4.32.0"
torch = [
    { version = "^2.0.1", markers = "sys_platform != 'linux'", source = "pypi" },
    # Use different src for linux, see: https://pytorch.org/get-started/locally/
    { version = "^2.0.1", markers = "sys_platform == 'linux'", source = "pytorch-cpu-src" },
]

[[tool.poetry.source]]
name = "pytorch-cpu-src"
url = "https://download.pytorch.org/whl/cpu"
priority = "explicit"

[tool.poetry.group.dev.dependencies]
pre-commit = "^3.3"
black = { extras = ["jupyter"], version = "^23.7.0" }
pytest = "^7.4.0"
ruff = "^0.0.286"
seaborn = "^0.12.2"

[tool.ruff]
target-version = "py310"
ignore = [
    "E501", # line-too-long (black should handle)
]
line-length = 88
select = [
    "B", # flake8-bugbear
    "C", # flake8-comprehensions
    "C90", # mccabe
    "E", # pycodestyle errors
    "F", # pyflakes
    "I", # isort
    "UP", # pyupgrade
    "W", # pycode warnings
]

[tool.mypy]
python_version = "3.10"
strict = true
pretty = true
show_error_context = true
implicit_reexport = true

[tool.pytest.ini_options]
addopts = """
    --color=yes
    --durations=5
    --cov=nxontology_ml
    --cov=experimentation
    --cov-fail-under=90
    --cov-report=html
    --cov-report=term
"""

[tool.coverage.run]
omit = ["*test*"]

# https://mypy.readthedocs.io/en/stable/config_file.html#using-a-pyproject-toml-file
[[tool.mypy.overrides]]
module = [
    "networkx.*",
]
ignore_missing_imports = true
